$buttonStatus: (
  primary: $primaryColorChange,
  success: $successColorChange,
  danger: $pinkColorChange,
  primaryChange: $primaryColorChange,
  successChange: $successColorChange,
  pinkChange: $pinkColorChange,
  whiteChange: $whiteColorChange,
);

.button {
  cursor: pointer;
  position: relative;
  padding: 14px 24px 13px;
  color: var(--white);
  font-size: 18px;
  line-height: 21px;
  height: 48px;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.2s ease-in-out;
  border-radius: 6px;
  font-weight: 500;

  .buttonIcon,
  .buttonContent {
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
  }

  &.whiteChangeButton {
    color: #0b0c0e;
  }

  .buttonContent {
    flex: 1;
    overflow: hidden;
    height: 100%;
  }

  .buttonIcon {
    margin-right: 12px;
    flex-basis: auto;
    font-size: 24px;

    &:empty {
      display: none;
    }
  }

  .loadingButtonImg {
    height: 1em;
    opacity: 0.8;
  }

  &.roundButton {
    border-radius: 30px;
  }

  &.disabledButton,
  &.loadingButton {
    pointer-events: none;
    cursor: default;
  }

  // 状态按钮
  @each $type, $color in $buttonStatus {
    &.#{'' + $type}Button {
      @include btnBg($color);

      &.disabledButton,
      &.loadingButton {
        @if type-of($color) ==list {
          background-color: nth($color, 4);
        } @else {
          background-color: darken($color, 20%);
        }
      }
    }
  }

  // 简单按钮
  &.plainButton {
    @each $type, $color in $buttonStatus {
      &.#{'' + $type}Button {
        $baseColor: $color;
        $disabledColor: #999;

        @if type-of($color) ==list {
          $baseColor: nth($color, 1);
          $disabledColor: nth($color, 4);
        } @else {
          $disabledColor: darken($color, 20%);
        }

        @include btnBg($color);
        @include btnBg($color: $color, $attr: box-shadow, $valuePre: inset 0 0 0 2px);

        @if ($type==whiteChange) {
          @include btnBg($color: #0b0c0e, $amount: 0, $attr: color);
        } @else {
          @include btnBg($color: var(--white), $amount: 0, $attr: color);
        }

        color: $baseColor;
        background-color: transparent;

        &.disabledButton,
        &.loadingButton {
          background-color: transparent;
          box-shadow: inset 0 0 0 1px $disabledColor;
          color: $disabledColor;
        }
      }
    }
  }

  // 线条按钮
  &.strokeButton {
    @each $type, $color in $buttonStatus {
      &.#{'' + $type}Button {
        @include btnBg($color: $color, $attr: box-shadow, $valuePre: inset 0 0 0 2px);

        @include btnBg($color: var(--white), $amount: 0, $attr: color);
        @include btnBg(
          $color: (
            rgba(0, 0, 0, 0.1),
            rgba(0, 0, 0, 0.2),
            rgba(0, 0, 0, 0.2),
            rgba(0, 0, 0, 0.4),
            rgba(0, 0, 0, 0.6),
          )
        );
      }
    }
  }

  &.largeButton {
    padding: 16px 32px 15px;
    font-size: 20px;
    line-height: 23px;
    height: 54px;
    border-radius: 8px;

    .buttonIcon {
      margin-right: 16px;
      font-size: 32px;
    }
  }

  &.smallButton {
    padding: 10px 16px 9px;
    font-size: 16px;
    height: 36px;
    border-radius: 4px;

    .buttonIcon {
      margin-right: 8px;
      font-size: 16px;
    }
  }

  &.miniButton {
    padding: 6px 8px 5px;
    font-size: 12px;
    line-height: 14px;
    height: 24px;
    border-radius: 3px;

    .buttonIcon {
      margin-right: 6px;
      font-size: 12px;
    }
  }
}
